{{ ansible_managed|comment }}

## /etc/audit/rules.d/audit.rules
## https://cisofy.com/controls/ACCT-9630/
## http://www.digrouz.com/mediawiki/index.php?title=(RHEL)_HOWTO_configure_the_auditing_of_the_system_(auditd)
## https://gist.github.com/Neo23x0/9fe88c0c5979e017a389b90fd19ddfee

###################
# Remove any existing rules
###################

-D

###################
# Buffer Size
###################
# Might need to be increased, depending on the load of your system.
-b {{ auditd_buffer_size | default(32768) }}

###################
# Failure Mode
###################
# 0=Silent
# 1=printk, print failure message
# 2=panic, halt system
-f {{ auditd_failure_mode | default(1) }}

# Exclusion
{% for r in auditd_exclusion_rules %}
{{ r }}
{% endfor %}
{% if (ansible_distribution == 'Ubuntu' and ansible_distribution_major_version >= 16) or (ansible_os_family == "RedHat" and ansible_distribution_major_version >= '7') %}
{% for r in auditd_exclusion_rules2 %}
{{ r }}
{% endfor %}
{% endif %}

###################
# Audit the audit logs.
###################
-w /var/log/audit/ -k auditlog

###################
## Auditd configuration
###################
## Modifications to audit configuration that occur while the audit (check your paths)
-w /etc/audit/ -p wa -k auditconfig
-w /etc/libaudit.conf -p wa -k auditconfig
-w /etc/audisp/ -p wa -k audispconfig

###################
# Monitor for use of audit management tools
###################
# Check your paths
-w /sbin/auditctl -p x -k audittools
-w /sbin/auditd -p x -k audittools

###################
# Special files
###################
-a exit,always -F arch=b32 -S mknod -S mknodat -k specialfiles
-a exit,always -F arch=b64 -S mknod -S mknodat -k specialfiles

###################
# Mount operations
###################
-a exit,always -F arch=b32 -S mount -S umount -S umount2 -k mount
-a exit,always -F arch=b64 -S mount -S umount2 -k mount

###################
# Changes to the time
###################
-a exit,always -F arch=b32 -S adjtimex -S settimeofday -S stime -S clock_settime -k time
-a exit,always -F arch=b64 -S adjtimex -S settimeofday -S clock_settime -k time
-w /etc/localtime -p wa -k localtime
-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change
-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change
-a always,exit -F arch=b64 -S clock_settime -k time-change
-a always,exit -F arch=b32 -S clock_settime -k time-change
-w /etc/localtime -p wa -k time-change

###################
# Use of stunnel
###################
-w /usr/sbin/stunnel -p x -k stunnel

###################
# Schedule jobs
###################
-w /etc/cron.allow -p wa -k cron
-w /etc/cron.deny -p wa -k cron
-w /etc/cron.d/ -p wa -k cron
-w /etc/cron.daily/ -p wa -k cron
-w /etc/cron.hourly/ -p wa -k cron
-w /etc/cron.monthly/ -p wa -k cron
-w /etc/cron.weekly/ -p wa -k cron
-w /etc/crontab -p wa -k cron
-w /var/spool/cron/crontabs/ -k cron

## user, group, password databases
-w /etc/group -p wa -k etcgroup
-w /etc/passwd -p wa -k etcpasswd
-w /etc/gshadow -k etcgroup
-w /etc/shadow -k etcpasswd
-w /etc/security/opasswd -k opasswd

###################
# Monitor usage of passwd command
###################
-w /usr/bin/passwd -p x -k passwd_modification

###################
# Monitor user/group tools
###################
-w /usr/sbin/groupadd -p x -k group_modification
-w /usr/sbin/groupmod -p x -k group_modification
-w /usr/sbin/addgroup -p x -k group_modification
-w /usr/sbin/useradd -p x -k user_modification
-w /usr/sbin/usermod -p x -k user_modification
-w /usr/sbin/adduser -p x -k user_modification

###################
# Login configuration and stored info
###################
-w /etc/login.defs -p wa -k login
-w /etc/securetty -p wa -k login
-w /var/log/faillog -p wa -k login
-w /var/log/lastlog -p wa -k login
-w /var/log/tallylog -p wa -k login

###################
# Network configuration
###################
-w /etc/hosts -p wa -k hosts
-w /etc/network/ -p wa -k network

###################
## system startup scripts
###################
-w /etc/inittab -p wa -k init
-w /etc/init.d/ -p wa -k init
-w /etc/init/ -p wa -k init

###################
# Library search paths
###################
-w /etc/ld.so.conf -p wa -k libpath

###################
# Kernel parameters and modules
###################
-w /etc/sysctl.conf -p wa -k sysctl
-w /etc/modprobe.conf -p wa -k modprobe
###################

###################
# PAM configuration
###################
-w /etc/pam.d/ -p wa -k pam
-w /etc/security/limits.conf -p wa  -k pam
-w /etc/security/pam_env.conf -p wa -k pam
-w /etc/security/namespace.conf -p wa -k pam
-w /etc/security/namespace.init -p wa -k pam

###################
# Puppet (SSL)
###################
## Error?
#-w /etc/puppet/ssl -p wa -k puppet_ssl

###################
# Postfix configuration
###################
-w /etc/aliases -p wa -k mail
-w /etc/postfix/ -p wa -k mail
###################

###################
# SSH configuration
###################
-w /etc/ssh/sshd_config -k sshd

###################
# Hostname
###################
-a exit,always -F arch=b32 -S sethostname -k hostname
-a exit,always -F arch=b64 -S sethostname -k hostname

###################
# Changes to issue
###################
-w /etc/issue -p wa -k etcissue
-w /etc/issue.net -p wa -k etcissue

###################
# Log all commands executed by root
###################
-a exit,always -F arch=b64 -F euid=0 -S execve -k rootcmd
-a exit,always -F arch=b32 -F euid=0 -S execve -k rootcmd


###################
# Log all commands executed by nobody/webserver
###################
{% if ansible_os_family == 'RedHat' %}
-a exit,always -F arch=b64 -F euid=99 -S execve -k nobodycmd
-a exit,always -F arch=b32 -F euid=99 -S execve -k nobodycmd
{% else %}
-a exit,always -F arch=b64 -F euid=65534 -S execve -k nobodycmd
-a exit,always -F arch=b32 -F euid=65534 -S execve -k nobodycmd
{% endif %}

###################
## Capture all failures to access on critical elements
###################
-a exit,always -F arch=b64 -S open -F dir=/etc -F success=0 -k unauthedfileacess
-a exit,always -F arch=b64 -S open -F dir=/bin -F success=0 -k unauthedfileacess
-a exit,always -F arch=b64 -S open -F dir=/home -F success=0 -k unauthedfileacess
-a exit,always -F arch=b64 -S open -F dir=/sbin -F success=0 -k unauthedfileacess
-a exit,always -F arch=b64 -S open -F dir=/srv -F success=0 -k unauthedfileacess
-a exit,always -F arch=b64 -S open -F dir=/usr/bin -F success=0 -k unauthedfileacess
-a exit,always -F arch=b64 -S open -F dir=/usr/local/bin -F success=0 -k unauthedfileacess
-a exit,always -F arch=b64 -S open -F dir=/usr/sbin -F success=0 -k unauthedfileacess
-a exit,always -F arch=b64 -S open -F dir=/var -F success=0 -k unauthedfileacess

###################
## su/sudo
###################
-w /bin/su -p x -k priv_esc
-w /usr/bin/sudo -p x -k priv_esc
-w /etc/sudoers -p rwa -k priv_esc

###################
# Poweroff/reboot tools
###################
-w /sbin/halt -p x -k power
-w /sbin/poweroff -p x -k power
-w /sbin/reboot -p x -k power
-w /sbin/shutdown -p x -k power

###################
# CIS
# 8.1.5,7,8,9,15,16,17 Record Events That Modify User/Group Information
###################
-w /etc/group -p wa -k identity
-w /etc/passwd -p wa -k identity
-w /etc/gshadow -p wa -k identity
-w /etc/shadow -p wa -k identity
-w /etc/security/opasswd -p wa -k identity
-w /var/log/faillog -p wa -k logins
-w /var/log/lastlog -p wa -k logins
-w /var/log/tallylog -p wa -k logins
# Session initiation information
-w /var/run/utmp -p wa -k session
-w /var/log/wtmp -p wa -k session
-w /var/log/btmp -p wa -k session
-w /etc/selinux/ -p wa -k MAC-policy
-w /etc/sudoers -p wa -k scope
-w /var/log/sudo.log -p wa -k actions
# Kernel modules
-w /sbin/insmod -p x -k modules
-w /sbin/rmmod -px -k modules
-w /sbin/modprobe -p x -k modules
-a always,exit -F arch=b64 -S init_module -S delete_module -k modules
# 8.1.6,10,11,13,14,17.1 Record Events That Modify the System's Network Environment
-a exit,always -F arch=b64 -S sethostname -S setdomainname -k system-locale
-a exit,always -F arch=b32 -S sethostname -S setdomainname -k system-locale
-w /etc/issue -p wa -k system-locale
-w /etc/issue.net -p wa -k system-locale
-w /etc/hosts -p wa -k system-locale
-w /etc/network -p wa -k system-locale
# Discretionary Access Control (DAC) modifications
-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod
-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod
-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod
-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod
-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod
-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod
-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access
-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access
-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access
-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access
-a always,exit -F arch=b64 -S mount -F auid>=500 -F auid!=4294967295 -k mounts
-a always,exit -F arch=b32 -S mount -F auid>=500 -F auid!=4294967295 -k mounts
# File Deletion Events by User
-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=500 -F auid!=4294967295 -k delete
-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=500 -F auid!=4294967295 -k delete

## extra
## https://slack.engineering/syscall-auditing-at-scale-e6a3ca8ac1b8
## Audit any network listen (should include bind())
## https://stackoverflow.com/questions/27014955/socket-connect-vs-bind
## https://www.redhat.com/archives/linux-audit/2015-January/msg00057.html
#?-a exit,always -F arch=b32 -S socketcall -k listen_call
## FIXME! some system: 'Syscall name unknown: listen'
#-a exit,always -F arch=b32 -S listen -k listen_call
-a exit,always -F arch=b64 -S listen -k listen_call

# suspicious x86 syscalls
-a exit,always -F arch=b32 -S ioperm -S modify_ldt -k suspicious_syscalls
-a exit,always -F arch=b64 -S ioperm -S modify_ldt -k suspicious_syscalls
# uncommon and dangerous syscalls
-a exit,always -F arch=b32 -S get_kernel_syms -S ptrace -k uncommon_syscalls
-a exit,always -F arch=b64 -S get_kernel_syms -S ptrace -k uncommon_syscalls
-a exit,always -F arch=b32 -S prctl -k uncommon_syscalls
-a exit,always -F arch=b64 -S prctl -k uncommon_syscalls

# Monitor administrator access to /home directories
-a always,exit -F dir=/home/ -F uid=0 -C auid!=obj_uid -k admin_user_home

# 32bit API Exploitation
## If you are on a 64 bit platform, everything _should_ be running
## in 64 bit mode. This rule will detect any use of the 32 bit syscalls
## because this might be a sign of someone exploiting a hole in the 32
## bit API.
-a always,exit -F arch=b32 -S all -k 32bit_api

## Injection
### These rules watch for code injection by the ptrace facility.
### This could indicate someone trying to do something bad or just debugging
-a always,exit -F arch=b32 -S ptrace -k tracing
-a always,exit -F arch=b64 -S ptrace -k tracing
-a always,exit -F arch=b32 -S ptrace -F a0=0x4 -k code_injection
-a always,exit -F arch=b64 -S ptrace -F a0=0x4 -k code_injection
-a always,exit -F arch=b32 -S ptrace -F a0=0x5 -k data_injection
-a always,exit -F arch=b64 -S ptrace -F a0=0x5 -k data_injection
-a always,exit -F arch=b32 -S ptrace -F a0=0x6 -k register_injection
-a always,exit -F arch=b64 -S ptrace -F a0=0x6 -k register_injection

### Unsuccessful Creation
-a always,exit -F arch=b32 -S creat -S link -S mknod -S mkdir -S symlink -S mknodat -S linkat -S symlinkat -F exit=-EACCES -k file_creation
-a always,exit -F arch=b64 -S creat -S link -S mknod -S mkdir -S symlink -S mknodat -S linkat -S symlinkat -F exit=-EACCES -k file_creation
-a always,exit -F arch=b32 -S link -S mkdir -S symlink -S mkdirat -F exit=-EPERM -k file_creation
-a always,exit -F arch=b64 -S link -S mkdir -S symlink -S mkdirat -F exit=-EPERM -k file_creation

### Unsuccessful Modification
-a always,exit -F arch=b32 -S rename -S renameat -S truncate -S chmod -S setxattr -S lsetxattr -S removexattr -S lremovexattr -F exit=-EACCES -k file_modification
-a always,exit -F arch=b64 -S rename -S renameat -S truncate -S chmod -S setxattr -S lsetxattr -S removexattr -S lremovexattr -F exit=-EACCES -k file_modification
-a always,exit -F arch=b32 -S rename -S renameat -S truncate -S chmod -S setxattr -S lsetxattr -S removexattr -S lremovexattr -F exit=-EPERM -k file_modification
-a always,exit -F arch=b64 -S rename -S renameat -S truncate -S chmod -S setxattr -S lsetxattr -S removexattr -S lremovexattr -F exit=-EPERM -k file_modification

{% if auditd_log_all_execve %}
# Log all executed commands (larger than just root, above)
-a exit,always -F arch=b32 -S execve -k execve_call
-a exit,always -F arch=b64 -S execve -k execve_call

{% endif %}
{% if auditd_log_binaries_exec %}
{% for f in auditd_log_binaries_exec %}
-w {{ f }} -p x -k binaries_exec
{% endfor %}
{% endif %}
{% if auditd_log_etc %}
# Log changes and executions within /etc
-w /etc/ -p wa -k etc_write
-w /etc/ -p x -k etc_exec

{% endif %}
{% if auditd_log_tmp %}
# Log changes and executions within /tmp
-w /tmp/ -p wa -k tmp_write
-w /tmp/ -p x -k tmp_exec

{% endif %}
{% if auditd_log_all_connect %}
# Log all connect (should include socket()) = 'Syscall name unknown: connect'
#-a exit,always -F arch=b32 -S connect -k connect_call
#-a exit,always -F arch=b64 -S connect -k connect_call

{% endif %}
{% if auditd_log_all_socket %}
# Log sockets, only the one succeeding
#-a exit,always -F arch=b64 -F success=1 -S socket -k socket_call
# socket(PF_INET, SOCK_STREAM, x) (ipv4/tcp)
#-a exit,always -F arch=b32 -a0=2 -F a1=1 -S socket -k socket_call_ipv4_tcp
#-a exit,always -F arch=b64 -a0=2 -F a1=1 -S socket -k socket_call_ipv4_tcp
# socket(PF_INET, SOCK_DGRAM, x) (ipv4/udp)
#-a exit,always -F arch=b32 -a0=2 -F a1=2 -S socket -k socket_call_ipv4_udp
#-a exit,always -F arch=b64 -a0=2 -F a1=2 -S socket -k socket_call_ipv4_udp
# socket(PF_INET6, SOCK_STREAM, x) (ipv6/tcp)
#-a exit,always -F arch=b32 -a0=10 -F a1=1 -S socket -k socket_call_ipv6_tcp
#-a exit,always -F arch=b64 -a0=10 -F a1=1 -S socket -k socket_call_ipv6_tcp
# socket(PF_INET6, SOCK_DGRAM, x) (ipv6/udp)
#-a exit,always -F arch=b32 -a0=10 -F a1=2 -S socket -k socket_call_ipv6_udp
#-a exit,always -F arch=b64 -a0=10 -F a1=2 -S socket -k socket_call_ipv6_udp

{% endif %}
# Audit access to those files
{% for f in auditd_sensitive_files %}
-w {{ f }} -p rwxa -k sensitive_file
{% endfor %}

# Audit sigkill usage
# http://unixadminschool.com/blog/2014/06/linux-admin-reference-configuring-auditd-in-redhat-enterprise-linux/
-a exit,always -F arch=b64 -S kill -k sigkill
-a exit,always -F arch=b32 -S kill -k sigkill
-a exit,always -F arch=b64 -S tkill -k sigkill
-a exit,always -F arch=b32 -S tkill -k sigkill
-a exit,always -F arch=b64 -S tgkill -k sigkill
-a exit,always -F arch=b32 -S tgkill -k sigkill

# Extra rules
{% for r in auditd_extra_rules %}
{{ r }}
{% endfor %}

###################
# Make the configuration immutable
###################
-e {{ auditd_enable_flag | default(2) }}

# EOF

